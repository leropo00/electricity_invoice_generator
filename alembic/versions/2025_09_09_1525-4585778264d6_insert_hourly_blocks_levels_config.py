"""insert_hourly_blocks_levels_config

Revision ID: 4585778264d6
Revises: dc6f1d82e9d2
Create Date: 2025-09-09 15:25:17.751913

"""
from datetime import datetime
import os
from typing import Sequence, Union

from alembic import op
import pandas as pd
import sqlalchemy as sa
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision: str = '4585778264d6'
down_revision: Union[str, Sequence[str], None] = 'dc6f1d82e9d2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    path = os.getcwd() + '/alembic/data/hourly_time_blocks.csv'
    df = pd.read_csv(path, sep=";")
    df['created_at'] = datetime.now()
    df['updated_at'] = df['created_at']

    conn = op.get_bind()
    result = conn.execute(text("SELECT id, season_key FROM config_electricity_seasons"))
    seasons_data = {}
    for row in result:
        seasons_data[row[1]] = row[0]
    
    columns = ['season_high_workday', 'season_low_workday', 'season_high_offday', 'season_low_offday']

    data = []
    for key in columns:
        data.extend(prepare_row_helper(df, key, seasons_data))

    conn = op.get_bind()
    for row in data:        
        conn.execute(
            text("""INSERT INTO config_hourly_block_levels (level, hour, day_type, electricity_season_id, created_at, updated_at)
                    VALUES (:level, :hour, :day_type, :electricity_season_id, :created_at, :updated_at)"""),
            row
        )

    # ### end Alembic commands ###

def prepare_row_helper( df, column_key, seasons_data):

    season_type, day_type = column_key.rsplit('_', 1)
    day_type = day_type.upper()
    electricity_season_id = seasons_data[season_type]

    data: list = []
    for row in df[['hour', column_key, 'created_at', 'updated_at']].itertuples():
        data.append({'hour': row[1],
                     'level': row[2], 
                     'day_type': day_type, 
                     'electricity_season_id': electricity_season_id,
                     'created_at':  row[3], 
                     'updated_at': row[4],
                    })

    return data

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DELETE FROM config_hourly_block_levels")
    # ### end Alembic commands ###
